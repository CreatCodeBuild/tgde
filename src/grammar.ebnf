@preprocessor typescript

createQuery -> "CREATE" _ "QUERY" _ queryName "(" parameterList ")" 
	_ "{" _ queryBody _ "}" _

queryBody -> queryBodyStmts

queryBodyStmts -> assignStmt          # Assignment
               | vSetVarDeclStmt      # Declaration
               | selectStmt           # Select 
               
assignStmt -> name _ "=" _ expr
            | name "." attrName _ "=" _ expr
vSetVarDeclStmt -> vertexSetName _ "=" _ seedSet
seedSet -> "{" seed "}"
seed -> paramName
           
expr -> name
            
selectStmt  -> sqlSelectBlock
            
# //gsqlSelectBlock -> gsqlSelectClause
# //               fromClause

sqlSelectBlock -> sqlSelectClause
               fromClause

sqlSelectClause -> "SELECT" columnExpr
                   
columnExpr -> expr
                   
fromClause -> "FROM" _ step

step -> stepSourceSet ["-" "(" stepEdgeSet ")" ("-"|"->") stepVertexSet]

parameterList -> parameterType _ paramName

stepSourceSet -> vertexSetName [":" vertexAlias]

baseType -> "INT"
          | "UINT"
          | "FLOAT"
          | "DOUBLE"
          | "STRING"
          | "BOOL"
          | "VERTEX" "<" vertexType ">"
          | "EDGE"
          | "JSONOBJECT"
          | "JSONARRAY"
          | "DATETIME"

parameterType -> baseType

lowercase          -> [a-z]
uppercase          -> [A-Z]
letter             -> lowercase | uppercase
digit              -> [0-9]
name -> (letter | "_") [letter | digit | "_"]:*   # can be a single "_" or start with "_"
graphName -> name
queryName -> name
paramName -> name
vertexType -> name
edgeType -> name
accumName -> name
vertexSetName -> name
attrName -> name
varName -> name
tupleType -> name
fieldName -> name
funcName -> name

_ -> [ \t\n\r]:*
