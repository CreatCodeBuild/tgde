Create QUERY RecommendMessage (String fn, String ln) SYNTAX v2 {
	#1. mark messages liked by Viktor
	#2. calculate log similarity score for each persons share the same 
	#   interests at Tag level.

	TYPEDEF tuple<STRING countryName, STRING companyName> companyInfo;

	SumAccum<int> @TagInCommon;
	SumAccum<float> @SimilarityScore;
	SumAccum<float> @Rank;
	OrAccum @Liked = false;        

   	Ohters = SELECT p
		FROM Person:s-(LIKES>)-:msg - (HAS_TAG>.<HAS_TAG.<LIKES)- :p;
		WHERE s.firstName == fn AND s.lastName == ln
		ACCUM msg.@Liked = true, p.@TagInCommon +=1
		POST-ACCUM p.@SimilarityScore = log (1 + p.@TagInCommc  on);
    
    # recommend new messages to Viktor that have not liked by him.
    RecommendedMessage =
             SELECT msg
             FROM Others:o-(LIKES>) - :msg
             WHERE  msg.@Liked == false
             ACCUM msg.@Rank +=o.@SimilarityScore
             ORDER BY msg.@Rank DESC   
             LIMIT 2;        

  PRINT RecommendedMessage[RecommendedMessage.content, RecommendedMessage.@Rank];
}