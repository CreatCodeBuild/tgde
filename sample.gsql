Create QUERY RecommendMessage (String fn, String ln) SYNTAX v2 {
	#1. mark messages liked by Viktor
	#2. calculate log similarity score for each persons share the same
	#   interests at Tag level.
	TYPEDEF tuple<STRING countryName, STRING companyName> companyInfo;
	SumAccum<int> @TagInCommon;
	SumAccum<float> @SimilarityScore;
	SumAccum<float> @Rank;
	OrAccum @Liked = false;
	SumAccum<int> @@cnt;
	SumAccum<string> @@xxx;
    A = SELECT t from :s -(LIKES:e1)- Post:msg -(HAS_CREATOR>)- :t WHERE s.firstName == "Viktor" AND s.lastname == "Akhiezer";

	C = select x FROM :x -(LIKES>:e1)- Post:msg -(HAS_CREATOR>)- :t WHERE s.firstName == "Viktor" AND s.lastName == "Akhiezer" ;

	B = SELECT t
		FROM :s -(LIKES>:e1)- Comment:msg -(HAS_CREATOR>)- :t
		WHERE s.firstName == "Viktor" AND s.lastName == "Akhiezer" ;

	Univ = SELECT u
			FROM A:p -(STUDY_AT>) -:u - (<STUDY_AT)- B:s
			WHERE s != p
			Per (u)
			POST-ACCUM @@cnt+=1;

	PRINT @@cnt;
	PRINT RecommendedMessage[RecommendedMessage.content, RecommendedMessage.@Rank];
}
